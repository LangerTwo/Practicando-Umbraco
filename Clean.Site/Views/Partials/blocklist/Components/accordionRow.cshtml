@inherits UmbracoViewPage<BlockListItem>

@{
    var row = (AccordionRow)Model.Content;
    var settings = (AccordionRowSettings)Model.Settings;
    if(settings?.Hide ?? false) {return;}
    if(row.AccordionItems == null || !row.AccordionItems.Any()) return;
    var accordionId = "accordion" + row.Key;
}

<div class="accordion pt-5" id="@accordionId">
        <header class="text-center">
            <h2>@row.Title</h2>
            <p>@row.Description</p>
        </header>

    @{
        var index = 0;

        @foreach(var item in row.AccordionItems){
            var rowItem = (AccordionItem)item.Content;
            var rowSettings = (AccordionItemSettings)item.Settings;
            if(rowSettings.Hide) continue;
            if(string.IsNullOrWhiteSpace(rowItem.Title) 
                || rowItem.Content == null 
                || string.IsNullOrWhiteSpace(rowItem.Content.ToString())) continue;

            var show = index == 0;
            var headinId = accordionId + "heading-" + index;
            var collapseId = accordionId + "collapse-" + index;

            <div class="accordion-item">
                <h2 class="accordion-header" id="@headinId">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="@show" aria-controls="@collapseId">
                    @rowItem.Title
                </button>
                </h2>
                <div id="@collapseId" class="accordion-collapse collapse @(show ? "show" : null)" data-bs-parent="#@accordionId" aria-labelledby="@headinId">
                <div class="accordion-body">
                    @rowItem.Content
                </div>
                </div>
            </div>
            index++;
        }
    }
</div>